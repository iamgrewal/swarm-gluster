version: '3.9'

networks:
  t2_proxy:
    name: t2_proxy
    external: true

  agent_proxy:
    name: agent_proxy
    driver: overlay
    attachable: true

services:
  agent:
    image: registry.onfan.online/portainer-ce-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_proxy
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: registry.onfan.online/portainer-ce
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - /mnt/gfs/portainer:/data
    networks:
      - t2_proxy
      - agent_proxy
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.portainer-rtr.entrypoints: https
        traefik.http.routers.portainer-rtr.rule: Host(`portainer.binetc.store`)
        traefik.http.routers.portainer-rtr.service: portainer-svc
        traefik.http.routers.portainer-rtr.tls: "true"
        traefik.http.routers.portainer-rtr.tls.domains{{ '[0]' }}.sans: "*.binetc.store"
        traefik.http.routers.portainer-rtr.middlewares: chain-no-auth@file
        traefik.http.services.portainer-svc.loadbalancer.server.port: 9000
      restart_policy:
        condition: on-failure
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
