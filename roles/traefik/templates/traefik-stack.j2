version: "3.9"

networks:
  t2_proxy:
    name: t2_proxy
    driver: overlay
    attachable: true
 
services:
  traefik:
    image: registry.onfan.online/traefik
    networks:
      - t2_proxy
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/gfs/traefik:/etc/traefik
      - /mnt/gfs/traefik/certs:/certs:ro
      - /mnt/gfs/logs/traefik:/logs
    environment:
      - TZ={{TZ}}
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.http-catchall.entrypoints: http
        traefik.http.routers.http-catchall.rule: HostRegexp(`{host:.+}`)
        traefik.http.routers.http-catchall.middlewares: middlewares-https-redirectscheme@file
        # HTTP Routers
        traefik.http.routers.traefik-rtr.entrypoints: https
        traefik.http.routers.traefik-rtr.rule: Host(`traefik.binetc.store`)
        traefik.http.routers.traefik-rtr.tls: "true"
        traefik.http.routers.traefik-rtr.tls.domains{{ '[0]' }}.sans: "*.binetc.store"
        traefik.http.routers.traefik-rtr.middlewares: middlewares-authelia@file
        ## Services - API
        traefik.http.routers.traefik-rtr.service: api@internal
        traefik.http.services.api-dummy.loadbalancer.server.port: 8088
      restart_policy:
        condition: on-failure
      mode: global
      placement:
        constraints: [node.role == manager]