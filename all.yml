---
- name: Update and Upgrade all Hosts
  gather_facts: false
  become: true
  become_method: sudo
  hosts: ubuntu
  roles:
     - host-settings

- name: NTP setings
  hosts: ubuntu
  become: true
  become_method: sudo
  roles:
    - geerlingguy-ntp
- name: Install docker managers and workers
  hosts: docker
  become: true
  become_method: sudo
  roles:
    - install-docker
- name: Install docker managers and workers
  hosts: swarm_workers
  become: true
  become_method: sudo
  roles:
    - add-new-part

- name: Install gluster nodes
  hosts: gluster_nodes
  become: true
  become_method: sudo
  vars_files:
    - ./vars/external.yml
  roles:
    - gluster
- name: Initialize swarm && add managers nodes
  hosts: swarm_managers
  become: true
  become_method: sudo
  roles:
    - swarm-init
    - swarm-add-mgn

- name: Add Workers nodes
  hosts: swarm_workers
  become: true
  become_method: sudo
  roles:
    - swarm-add-workers
- name: add gluster clients
  hosts: docker
  become: true
  become_method: sudo
  vars_files:
    - ./vars/external.yml
  roles:
    - add-gluster-client


- name: Update and Upgrade all Hosts
  gather_facts: false
  become: true
  become_method: sudo
  hosts: swarm_managers
  roles:
     - remove-stack


- name: "Play for cluster deletion"
  hosts: localhost
  gather_facts: false
  vars_prompt:
  - name: "user_response_cluster_delete"
    prompt: "Do you want to delete the cluster (yes/no)?"
    private: false
  pre_tasks:
  - fail:
      msg: >
        {%- if not user_response_cluster_delete|regex_search('(?i)^yes$|^no$') -%}
            Invalid input provided, input must be yes or no
        {%-else-%}
            User choose to abort the playbook
        {%-endif-%}
    when: not user_response_cluster_delete |regex_search('(?i)^yes$')
  tasks:
  - name: "Some meaningful task"      # <--finally some real business logic start here.
    debug:
      msg: "Hello from a meaningful task!"

- name: "second play"
  hosts: localhost
  gather_facts: false
  tasks:
  - name: "Some meaningful task from 2nd play"      # <--task from 2nd play
    debug:
      msg: "Hello from a meaningful task of 2nd play!"